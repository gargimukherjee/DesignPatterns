{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/classes/circle.ts","src/classes/rectangle.ts","src/classes/shapeFactory.ts","src/classes/square.ts","src/main.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Circle","prototype","draw","span","document","createElement","innerText","body","appendChild","Rectangle","rectangle_1","square_1","circle_1","ShapeFactory","getShape","shapeType","Square","shapeFactory_1","Main","init","shapeFactory"],"mappings":"CAAA,WAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,MAAAI,GAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,GAAA,MAAAJ,OAAAiB,GAAA,SAAAT,EAAAU,EAAAJ,gECEA,IAAAK,GAAA,WAAA,QAAAA,MAOA,MALWA,GAAAC,UAAAC,KAAP,WACI,GAAIC,GAAuBC,SAASC,cAAc,OAClDF,GAAKG,UAAY,2BACjBF,SAASG,KAAKC,YAAYL,IAElCH,IAPaL,GAAAK,OAAAA,uFCAb,IAAAS,GAAA,WAAA,QAAAA,MAOA,MALWA,GAAAR,UAAAC,KAAP,WACI,GAAIC,GAAuBC,SAASC,cAAc,OAClDF,GAAKG,UAAY,8BACjBF,SAASG,KAAKC,YAAYL,IAElCM,IAPad,GAAAc,UAAAA,uFCDb,IAAAC,GAAArB,EAAA,eACAsB,EAAAtB,EAAA,YACAuB,EAAAvB,EAAA,YAGAwB,EAAA,WAAA,QAAAA,MAeA,MAbWA,GAAAZ,UAAAa,SAAP,SAAgBC,GACZ,MAAgB,aAAbA,EACQ,GAAIL,GAAAD,UAEM,UAAbM,EACG,GAAIJ,GAAAK,OAEM,UAAbD,EACG,GAAIH,GAAAZ,OAGR,MAEfa,IAfalB,GAAAkB,aAAAA,gICJb,IAAAG,GAAA,WAAA,QAAAA,MAOA,MALWA,GAAAf,UAAAC,KAAP,WACI,GAAIC,GAAuBC,SAASC,cAAc,OAClDF,GAAKG,UAAY,2BACjBF,SAASG,KAAKC,YAAYL,IAElCa,IAParB,GAAAqB,OAAAA,uFCFb,IAAAC,GAAA5B,EAAA,0BAIA6B,EAAA,WAAA,QAAAA,MAaA,MAXWA,GAAAjB,UAAAkB,KAAP,WACI,GAAIC,GAA4B,GAAIH,GAAAJ,YAEbO,GAAaN,SAAS,aACnCZ,OACUkB,EAAaN,SAAS,UACnCZ,OACakB,EAAaN,SAAS,UACnCZ,QAGfgB,IAbavB,GAAAuB,KAAAA,GAeF,GAAIA,IACVC","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import {IShape} from '../interfaces/IShape';\r\n\r\nexport class Circle implements IShape{\r\n\r\n    public draw():void{\r\n        let span:HTMLSpanElement = document.createElement(\"span\");\r\n        span.innerText = `Drawing a circle here...`;\r\n        document.body.appendChild(span);\r\n    }\r\n}","import {IShape} from '../interfaces/IShape';\r\n\r\nexport class Rectangle implements IShape{\r\n\r\n    public draw():void{\r\n        let span:HTMLSpanElement = document.createElement(\"span\");\r\n        span.innerText = `Drawing a rectangle here...`;\r\n        document.body.appendChild(span);\r\n    }\r\n}","import {IShape} from '../interfaces/IShape';\r\nimport {Rectangle} from './rectangle';\r\nimport {Square} from './square';\r\nimport {Circle} from './circle';\r\n\r\n\r\nexport class ShapeFactory {\r\n\r\n    public getShape(shapeType:String):IShape{\r\n        if(shapeType == 'Rectangle'){\r\n            return new Rectangle() ;\r\n        }\r\n        else if(shapeType == 'Square'){\r\n            return new Square();\r\n        }\r\n        else if(shapeType == 'Circle'){\r\n            return new Circle();\r\n        }\r\n\r\n        return null;\r\n    }\r\n}","import {IShape} from '../interfaces/IShape';\r\n\r\nexport class Square implements IShape{\r\n\r\n    public draw():void{\r\n        let span:HTMLSpanElement = document.createElement(\"span\");\r\n        span.innerText = `Drawing a square here...`;\r\n        document.body.appendChild(span);\r\n    }\r\n}","import { ShapeFactory } from './classes/shapeFactory';\r\nimport { IShape } from './interfaces/IShape'\r\n\r\n\r\nexport class Main{\r\n\r\n    public init(){\r\n        let shapeFactory:ShapeFactory = new ShapeFactory();\r\n\r\n        let rectangle:IShape = shapeFactory.getShape('Rectangle');\r\n        rectangle.draw();\r\n        let square:IShape = shapeFactory.getShape('Square');\r\n        square.draw();\r\n        let circle:IShape = shapeFactory.getShape('Circle');\r\n        circle.draw();\r\n\r\n    }\r\n}\r\n\r\nlet main = new Main();\r\nmain.init();"]}