{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/classes/abstractFactory.ts","src/classes/factoryGenerator.ts","src/classes/rectangle.ts","src/classes/roundedRectangle.ts","src/classes/roundedShapeFactory.ts","src/classes/roundedSquare.ts","src/classes/shapeFactory.ts","src/classes/square.ts","src/main.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","AbstractFactory","roundedShapeFactory_1","shapeFactory_1","FactoryGenerator","getFactory","rounded","RoundedShapeFactory","ShapeFactory","Rectangle","prototype","draw","span","document","createElement","innerText","body","appendChild","RoundedRectangle","abstractFactory_1","roundedRectangle_1","roundedSquare_1","_super","__extends","getShape","shapeType","RoundedSquare","rectangle_1","square_1","Square","factoryGenerator_1","Main","init","shapeFactory"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import {IShape} from '../interfaces/IShape';\r\n\r\n\r\nexport abstract class AbstractFactory {\r\n\r\n    abstract getShape(shapeType:String):IShape;\r\n}","import {AbstractFactory} from './abstractFactory';\r\nimport {RoundedShapeFactory} from './roundedShapeFactory';\r\nimport {ShapeFactory} from './shapeFactory';\r\n\r\n\r\nexport class FactoryGenerator{\r\n\r\n    public static getFactory(rounded:Boolean):AbstractFactory{\r\n        if(rounded === true){\r\n            return new RoundedShapeFactory();\r\n        }\r\n        else {\r\n            return new ShapeFactory();\r\n        }\r\n\r\n    }\r\n\r\n}","import {IShape} from '../interfaces/IShape';\r\n\r\nexport class Rectangle implements IShape{\r\n\r\n    public draw():void{\r\n        let span:HTMLSpanElement = document.createElement(\"span\");\r\n        span.innerText = `Drawing a rectangle here...`;\r\n        document.body.appendChild(span);\r\n    }\r\n}","import {IShape} from '../interfaces/IShape';\r\n\r\nexport class RoundedRectangle implements IShape{\r\n\r\n    public draw():void{\r\n        let span:HTMLSpanElement = document.createElement(\"span\");\r\n        span.innerText = `Drawing a rounded rectangle here...`;\r\n        document.body.appendChild(span);\r\n    }\r\n}","import {AbstractFactory} from './abstractFactory';\r\nimport {IShape} from '../interfaces/IShape';\r\nimport {RoundedRectangle} from './roundedRectangle';\r\nimport {RoundedSquare} from './roundedSquare';\r\n\r\nexport class RoundedShapeFactory extends AbstractFactory{\r\n\r\n    public getShape(shapeType:String):IShape{\r\n        if(shapeType == 'Rounded Rectangle'){\r\n            return new RoundedRectangle() ;\r\n        }\r\n        else if(shapeType == 'Rounded Square'){\r\n            return new RoundedSquare();\r\n        }\r\n        return null;\r\n    }\r\n}","import {IShape} from '../interfaces/IShape';\r\n\r\nexport class RoundedSquare implements IShape{\r\n\r\n    public draw():void{\r\n        let span:HTMLSpanElement = document.createElement(\"span\");\r\n        span.innerText = `Drawing a rounded square here...`;\r\n        document.body.appendChild(span);\r\n    }\r\n}","import {AbstractFactory} from './abstractFactory';\r\nimport {IShape} from '../interfaces/IShape';\r\nimport {Rectangle} from './rectangle';\r\nimport {Square} from './square';\r\n\r\nexport class ShapeFactory extends AbstractFactory{\r\n\r\n    public getShape(shapeType:String):IShape{\r\n        if(shapeType == 'Rectangle'){\r\n            return new Rectangle() ;\r\n        }\r\n        else if(shapeType == 'Square'){\r\n            return new Square();\r\n        }\r\n        return null;\r\n    }\r\n}","import {IShape} from '../interfaces/IShape';\r\n\r\nexport class Square implements IShape{\r\n\r\n    public draw():void{\r\n        let span:HTMLSpanElement = document.createElement(\"span\");\r\n        span.innerText = `Drawing a square here...`;\r\n        document.body.appendChild(span);\r\n    }\r\n}","import { FactoryGenerator } from './classes/factoryGenerator';\r\nimport { ShapeFactory } from './classes/shapeFactory';\r\nimport { IShape } from './interfaces/IShape'\r\n\r\n\r\nexport class Main{\r\n\r\n    public init(){\r\n        let shapeFactory:ShapeFactory = FactoryGenerator.getFactory(true);\r\n        let roundedRectangle:IShape = shapeFactory.getShape('Rounded Rectangle');\r\n        roundedRectangle.draw();\r\n        let roundedSquare:IShape = shapeFactory.getShape('Rounded Square');\r\n        roundedSquare.draw()\r\n\r\n        shapeFactory = FactoryGenerator.getFactory(false);\r\n        let rectangle:IShape = shapeFactory.getShape('Rectangle');\r\n        rectangle.draw();\r\n        let square:IShape = shapeFactory.getShape('Square');\r\n        square.draw();\r\n    }\r\n}\r\n\r\nlet main = new Main();\r\nmain.init();"]}