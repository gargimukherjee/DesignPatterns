{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/classes/imageLoader.ts","src/classes/iterator.ts","src/main.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","ImageLoader","prototype","loadImage","imageUrl","callback","this","image","document","createElement","onload","imageLoaded","bind","onerror","imageLoadError","src","console","log","Iterator","list","counter","iLen","hasNext","getNext","obj","reset","iterator_1","imageLoader_1","Main","iterator","imageLoader","imageList","loadNextImage","url","handleImageLoaded","imageEle","li","appendChild","body"],"mappings":"CAAA,WAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,MAAAI,GAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,GAAA,MAAAJ,OAAAiB,GAAA,SAAAT,EAAAU,EAAAJ,gECAA,IAAAK,GAAA,WAKI,QAAAA,MA0CJ,MA9BWA,GAAAC,UAAAC,UAAP,SAAiBC,EAAiBC,GAC9BC,KAAKF,SAAWA,EAChBE,KAAKD,SAAWA,EAChBC,KAAKC,MAAQC,SAASC,cAAc,OACpCH,KAAKC,MAAMG,OAASJ,KAAKK,YAAYC,KAAKN,MAC1CA,KAAKC,MAAMM,QAAUP,KAAKQ,eAAeF,KAAKN,MAC9CA,KAAKC,MAAMQ,IAAMT,KAAKF,UAUlBH,EAAAC,UAAAS,YAAR,WACIK,QAAQC,IAAI,wBACZX,KAAKD,SAASC,KAAKC,QAQfN,EAAAC,UAAAY,eAAR,WACIE,QAAQC,IAAI,oCAAqCX,KAAKF,UACtDE,KAAKD,YAEbJ,IA/CaL,GAAAK,YAAAA,uFCAb,IAAAiB,GAAA,WAKI,QAAAA,GAAYC,GACRb,KAAKa,KAAOA,EACZb,KAAKc,QAAU,EACfd,KAAKe,KAAOf,KAAKa,KAAKrB,OAgC9B,MAvBWoB,GAAAhB,UAAAoB,QAAP,WACI,QAAGhB,KAAKc,SAAWd,KAAKe,OAYrBH,EAAAhB,UAAAqB,QAAP,WACI,GAAIC,GAAUlB,KAAKa,KAAKb,KAAKc,QAE7B,OADAd,MAAKc,UACEI,GAGJN,EAAAhB,UAAAuB,MAAP,WACInB,KAAKc,QAAU,GAGvBF,IAxCatB,GAAAsB,SAAAA,uFCAb,IAAAQ,GAAApC,EAAA,sBACAqC,EAAArC,EAAA,0BAsDW,IAnDX,WAKI,QAAAsC,KACI,GAAIT,IACA,mBACA,qBACA,sBACA,oBACA,oBAIJb,MAAKuB,SAAW,GAAIH,GAAAR,SAASC,GAC7Bb,KAAKwB,YAAc,GAAIH,GAAA1B,YAGvBK,KAAKyB,UAAWvB,SAASC,cAAc,MA8B/C,MAtBWmB,GAAA1B,UAAA8B,cAAP,WACI,GAA8B,GAA3B1B,KAAKuB,SAASP,UAAkB,CAC/B,GAAIW,GAAa3B,KAAKuB,SAASN,SAC/BjB,MAAKwB,YAAY3B,UAAU8B,EAAK3B,KAAK4B,kBAAkBtB,KAAKN,SAY5DsB,EAAA1B,UAAAgC,kBAAR,SAA0BC,GACtB,GAAIC,GAAK5B,SAASC,cAAc,KAChC2B,GAAGC,YAAYF,GACf7B,KAAKyB,UAAUM,YAAYD,GAC3B5B,SAAS8B,KAAKD,YAAY/B,KAAKyB,WAC/BzB,KAAK0B,iBAEbJ,OAGKI","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","export class ImageLoader{\n    imageUrl:string;\n    callback:Function;\n    image:HTMLImageElement;\n\n    constructor(){\n       \n    }\n\n    /**\n     * LoadImage creates an img DOM and assigns the url of the image to the image DOM src\n     * Also checks if there are errors then error function will get executed\n     * @param imageUrl : is the url of the image from image array(;list) received from the main.ts\n     * @param callback : handleImageLoaded, a callback function that will get executed \n     * once the image url is set as image src in DOM. Gets executed on the main page.\n     * @return void\n     */\n    public loadImage(imageUrl:string, callback:Function){\n        this.imageUrl = imageUrl;\n        this.callback = callback;\n        this.image = document.createElement('img') as HTMLImageElement;\n        this.image.onload = this.imageLoaded.bind(this);\n        this.image.onerror = this.imageLoadError.bind(this);\n        this.image.src = this.imageUrl;\n        //setTimeout(this.callback,1000);\n    }\n\n    /**\n     * Once the image DOM is ready, it is sent back to the main.ts along with callback function \n     * to be executed. \n     * @param null \n     * @return void\n     */\n    private imageLoaded(){\n        console.log(\"image load ---------\")\n        this.callback(this.image);\n    }\n\n    /**\n     * In case there are any errors in the image url or any other, this code will get executed\n     * @param null\n     * @return void\n     */\n    private imageLoadError(){\n        console.log(\"error occred while loading image \"+ this.imageUrl);\n        this.callback();\n    }\n}","export class Iterator{\n    list:Array<any>;\n    counter:number;\n    iLen:number;\n\n    constructor(list:Array<any>){\n        this.list = list;\n        this.counter = 0;\n        this.iLen = this.list.length;\n    }\n\n    /**\n     * function to check wether number if items in a list is greater than the counter\n     * @param null\n     * @return : return true if the number is lesser and returns false if the number is greater \n     * than the counter\n     */\n    public hasNext():Boolean{\n        if(this.counter >= this.iLen){\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * if the number is lesser than the counter, then the next item in the list is returned\n     * and at the same time counter is incremented\n     * @param null\n     * @return obj-- that is the next item in the list\n     */\n    public getNext():any{\n        var obj:any = this.list[this.counter];\n        this.counter++;\n        return obj;\n    }\n\n    public reset(){\n        this.counter = 0;\n    }\n\n}","import { Iterator } from './classes/iterator';\nimport { ImageLoader } from './classes/imageLoader';\n\n\nclass Main{\n    iterator:Iterator;\n    imageLoader:ImageLoader;\n    imageList:HTMLUListElement;\n\n    constructor(){\n        var list:Array<any> = [\n            \"images/apple.jpg\", \n            \"images/brinjal.jpg\",\n            \"images/broccoli.jpg\",\n            \"images/carrot.jpg\",\n            \"images/chikoo.jpg\" \n\n        ]\n\n        this.iterator = new Iterator(list);\n        this.imageLoader = new ImageLoader();\n\n        //Create an Unordered list in which the list items containing the image will get appended\n        this.imageList= document.createElement(\"ul\");\n    }\n\n    /** Function will check if there is a next item in the list \n     * If hasNext is true, then will execute getNext and load the next image\n     * @param null\n     * @return void\n     */\n    public loadNextImage(){\n        if(this.iterator.hasNext() == true){\n            var url:string = this.iterator.getNext();\n            this.imageLoader.loadImage(url, this.handleImageLoaded.bind(this));\n        }\n    }\n\n    /**\n     * Inserts the image DOM into a li and appends the li to the ul-this.imageList\n     * this.imageList is appended to the document.body\n     * Also class the loadImage after one cycle is complete\n     * @param imageEle which is the image DOM received from the imageLoader.ts\n     * @return void\n     * \n     */\n    private handleImageLoaded(imageEle:any){\n        var li = document.createElement(\"li\");\n        li.appendChild(imageEle);\n        this.imageList.appendChild(li);\n        document.body.appendChild(this.imageList);\n        this.loadNextImage();\n    }\n}\n\nlet main = new Main();\nmain.loadNextImage();"]}